            .ORIG   X3000
            JSR     MUL             ;计算地图规格
            JSR     CLEAN           ;所有位置当前经过最长滑道置0
            LD      R6, US_SP
            ADD     R5, R6, #0      ;栈指针
            LD      R1, MAP
            ADD     R1, R1, #2      
            AND     R2, R2, #0
            ST      R2, RE_P        ;循环初始位置数量置0
            ADD     R2, R2, #1
            ST      R2, X
            ST      R2, Y           ;初始相对坐标（1，1）
            LEA     R3, LEN_SV
            
LOOP        LD      R6, US_SP       ;重新压栈
            ADD     R6, R6, #-4
            STR     R1, R6, #3      
            STR     R3, R6, #2
            LD      R2, X
            STR     R2, R6, #1
            LD      R2, Y
            STR     R2, R6, #0      ;压入地图地址，长度地址，X，Y
            LDR     R2, R3, #0      ;是否已有滑道长度
            BRp     NEXTLOOP
            AND     R2, R2, #0
            ST      R2, LEN         ;当前滑道长为 0
            JSR     DFS
            
NEXTLOOP    LD      R2, RE_P
            ADD     R2, R2, #1
            ST      R2, RE_P
            LD      R4, SIZE
            ADD     R4, R4, R2      
            BRz     TERMINATE           ;判断是否到达地图末尾
            LD      R2, X
            ADD     R2, R2, #1
            ST      R2, X               
            LD      R4, M
            ADD     R4, R4, R2          ;是否达到了行末
            BRnz    C
            AND     R2, R2, #0
            ADD     R2, R2, #1
            ST      R2, X               ;换行X重新赋值1
            LD      R2, Y
            ADD     R2, R2, #1
            ST      R2, Y
C           LDR     R3, R5, #-2         ;取出地图地址，长度地址，+1
            ADD     R3, R3, #1
            LDR     R1, R5, #-1
            ADD     R1, R1, #1
            BR      LOOP
TERMINATE   JSR     FIND
            HALT

CLEAN       AND     R1, R1, #0      ;清除残存垃圾数据
            LEA     R2, LEN_SV
            LD      R3, SIZE
B           STR     R1, R2, #0
            ADD     R2, R2, #1
            ADD     R3, R3, #1
            BRn     B
            RET
            
MUL         LD      R1, MAP         ;计算地图规格
            LDR     R2, R1, #0
            NOT     R2, R2
            ADD     R2, R2, #1
            ST      R2, N
            LDR     R2, R1, #0
            LDR     R3, R1, #1
            ST      R3, M_
            NOT     R3, R3
            ADD     R3, R3, #1
            ST      R3, M
            LDR     R3, R1, #1
            AND     R0, R0, #0
A           ADD     R0, R2, R0
            ADD     R3, R3, #-1
            BRp     A     
            NOT     R0, R0
            ADD     R0, R0, #1
            ST      R0, SIZE
            RET
            
DFS         ADD     R6, R6, #-1
            STR     R5, R6, #0
            ADD     R5, R6, #0
            ADD     R6, R6, #-1
            STR     R7, R6, #0
            LD      R4, LEN
            ADD     R4, R4, #1
            ST      R4, LEN
            LDR     R3, R5, #3
            LDR     R2, R3, #0
            NOT     R2, R2
            ADD     R2, R2, #1
            ADD     R2, R2, R4
            BRnz    RIGHT
            STR     R4, R3, #0
RIGHT       LDR     R2, R5, #2
            LD      R4, M
            ADD     R4, R4, R2      ;是否边界
            BRz     DOWN
            LDR     R1, R5, #4      ;地图地址
            LDR     R0, R1, #0      ;地址高度
            ADD     R1, R1, #1      ;下一处地址
            LDR     R4, R1, #0      ;地址高度
            NOT     R4, R4          
            ADD     R4, R4, #1      ;取相反数
            ADD     R4, R4, R0      ;比较高度
            BRnz    DOWN            
            ADD     R6, R6, #-4     ;申请内存
            LDR     R3, R5, #3      ;读取当前长度地址
            STR     R1, R6, #3      ;存入下一级地址
            ADD     R3, R3, #1      ;长度地址+1
            STR     R3, R6, #2      ;存入长度地址
            ADD     R2, R2, #1      ;x+1
            STR     R2, R6, #1      ;存X
            LDR     R2, R5, #1      
            STR     R2, R6, #0      ;存Y
            JSR     DFS
DOWN        LDR     R2, R5, #1
            LD      R4, N
            ADD     R4, R4, R2
            BRz     LEFT
            LDR     R1, R5, #4
            LDR     R0, R1, #0
            LD      R4, M_
            ADD     R1, R1, R4
            LDR     R2, R1, #0
            NOT     R2, R2
            ADD     R2, R2, #1
            ADD     R2, R0, R2
            BRnz    LEFT
            ADD     R6, R6, #-4
            LDR     R3, R5, #3
            STR     R1, R6, #3
            ADD     R3, R3, R4
            STR     R3, R6, #2      ;地图，长度
            LDR     R2, R5, #1
            ADD     R2, R2, #1
            STR     R2, R6, #0
            LDR     R2, R5, #2
            STR     R2, R6, #1
            JSR     DFS
LEFT        LDR     R2, R5, #2    
            ADD     R4, R2, #-1
            BRz     UP
            LDR     R1, R5, #4
            LDR     R0, R1, #0
            ADD     R1, R1, #-1
            LDR     R2, R1, #0
            NOT     R2, R2
            ADD     R2, R2, #1
            ADD     R2, R2, R0
            BRnz    UP
            ADD     R6, R6, #-4
            STR     R1, R6, #3
            LDR     R3, R5, #3
            ADD     R3, R3, #-1
            STR     R3, R6, #2
            LDR     R2, R5, #2
            ADD     R2, R2, #-1
            STR     R2, R6, #1 
            LDR     R2, R5, #1
            STR     R2, R6, #0
            JSR     DFS
UP          LDR     R2, R5, #1
            ADD     R4, R2, #-1
            BRz     RETURN
            LDR     R1, R5, #4
            LDR     R0, R1, #0
            LD      R4, M
            ADD     R1, R1, R4
            LDR     R2, R1, #0
            NOT     R2, R2
            ADD     R2, R2, #1
            ADD     R2, R2, R0
            BRnz    RETURN
            ADD     R6, R6, #-4
            STR     R1, R6, #3
            LDR     R3, R5, #3
            ADD     R3, R3, R4
            STR     R3, R6, #2
            LDR     R2, R5, #1
            ADD     R2, R2, #-1
            STR     R2, R6, #0 
            LDR     R2, R5, #2
            STR     R2, R6, #1
            JSR     DFS
RETURN      LDR     R7, R5, #-1
            LDR     R5, R5, #0
            ADD     R6, R6, #6
            LD      R2, LEN
            ADD     R2, R2, #-1
            ST      R2, LEN
            RET
            
FIND        LEA     R0, LEN_SV
            LD      R3, SIZE
            LDR     R2, R0, #0
            ADD     R3, R3, #1
D           ADD     R0, R0, #1
            LDR     R1, R0, #0
            NOT     R1, R1
            ADD     R1, R1, #1
            ADD     R1, R1, R2
            BRzp    E
            LDR     R2, R0, #0
            BR      E
E           ADD     R3, R3, #1
            BRz     R
            BR      D
R           RET

X           .BLKW   #1
Y           .BLKW   #1
RE_P        .BLKW   #1              ;循环初始位置数量
LEN         .BLKW   #1              ;当前滑道长度
US_SP       .FILL   xFE00           ;栈
MAP         .FILL   x4000           ;地图
SIZE        .BLKW   #1              ;地图规模    负值    常值
M_          .BLKW   #1
M           .BLKW   #1              
N           .BLKW   #1              ;M,N为原值的负值     常值 
LEN_SV      .BLKW   #50             ;所有位置最长值
            .END